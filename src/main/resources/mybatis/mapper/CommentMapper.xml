<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.linjun.dao.CommentMapper">
  <resultMap id="BaseResultMap" type="com.linjun.model.Comment">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="commentType" jdbcType="VARCHAR" property="commenttype" />
    <result column="parentID" jdbcType="INTEGER" property="parentid" />
    <result column="commentObjectID" jdbcType="INTEGER" property="commentobjectid" />
    <result column="ownerID" jdbcType="INTEGER" property="ownerid" />
    <result column="userID" jdbcType="INTEGER" property="userid" />
    <result column="author" jdbcType="VARCHAR" property="author" />
    <result column="subject" jdbcType="VARCHAR" property="subject" />
    <result column="body" jdbcType="VARCHAR" property="body" />
    <result column="isPrivate" jdbcType="CHAR" property="isprivate" />
    <result column="ip" jdbcType="VARCHAR" property="ip" />
    <result column="dataCreate" jdbcType="TIMESTAMP" property="datacreate" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, commentType, parentID, commentObjectID, ownerID, userID, author, subject, body, 
    isPrivate, ip, dataCreate
  </sql>
  <select id="selectByExample" parameterType="com.linjun.model.CommentCriteria" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    'true' as QUERYID,
    <include refid="Base_Column_List" />
    from t_comment
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from t_comment
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from t_comment
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.linjun.model.CommentCriteria">
    delete from t_comment
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.linjun.model.Comment">
    insert into t_comment (id, commentType, parentID, 
      commentObjectID, ownerID, userID, 
      author, subject, body, 
      isPrivate, ip, dataCreate
      )
    values (#{id,jdbcType=INTEGER}, #{commenttype,jdbcType=VARCHAR}, #{parentid,jdbcType=INTEGER}, 
      #{commentobjectid,jdbcType=INTEGER}, #{ownerid,jdbcType=INTEGER}, #{userid,jdbcType=INTEGER}, 
      #{author,jdbcType=VARCHAR}, #{subject,jdbcType=VARCHAR}, #{body,jdbcType=VARCHAR}, 
      #{isprivate,jdbcType=CHAR}, #{ip,jdbcType=VARCHAR}, #{datacreate,jdbcType=TIMESTAMP}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.linjun.model.Comment">
    insert into t_comment
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="commenttype != null">
        commentType,
      </if>
      <if test="parentid != null">
        parentID,
      </if>
      <if test="commentobjectid != null">
        commentObjectID,
      </if>
      <if test="ownerid != null">
        ownerID,
      </if>
      <if test="userid != null">
        userID,
      </if>
      <if test="author != null">
        author,
      </if>
      <if test="subject != null">
        subject,
      </if>
      <if test="body != null">
        body,
      </if>
      <if test="isprivate != null">
        isPrivate,
      </if>
      <if test="ip != null">
        ip,
      </if>
      <if test="datacreate != null">
        dataCreate,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="commenttype != null">
        #{commenttype,jdbcType=VARCHAR},
      </if>
      <if test="parentid != null">
        #{parentid,jdbcType=INTEGER},
      </if>
      <if test="commentobjectid != null">
        #{commentobjectid,jdbcType=INTEGER},
      </if>
      <if test="ownerid != null">
        #{ownerid,jdbcType=INTEGER},
      </if>
      <if test="userid != null">
        #{userid,jdbcType=INTEGER},
      </if>
      <if test="author != null">
        #{author,jdbcType=VARCHAR},
      </if>
      <if test="subject != null">
        #{subject,jdbcType=VARCHAR},
      </if>
      <if test="body != null">
        #{body,jdbcType=VARCHAR},
      </if>
      <if test="isprivate != null">
        #{isprivate,jdbcType=CHAR},
      </if>
      <if test="ip != null">
        #{ip,jdbcType=VARCHAR},
      </if>
      <if test="datacreate != null">
        #{datacreate,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.linjun.model.CommentCriteria" resultType="java.lang.Long">
    select count(*) from t_comment
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update t_comment
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.commenttype != null">
        commentType = #{record.commenttype,jdbcType=VARCHAR},
      </if>
      <if test="record.parentid != null">
        parentID = #{record.parentid,jdbcType=INTEGER},
      </if>
      <if test="record.commentobjectid != null">
        commentObjectID = #{record.commentobjectid,jdbcType=INTEGER},
      </if>
      <if test="record.ownerid != null">
        ownerID = #{record.ownerid,jdbcType=INTEGER},
      </if>
      <if test="record.userid != null">
        userID = #{record.userid,jdbcType=INTEGER},
      </if>
      <if test="record.author != null">
        author = #{record.author,jdbcType=VARCHAR},
      </if>
      <if test="record.subject != null">
        subject = #{record.subject,jdbcType=VARCHAR},
      </if>
      <if test="record.body != null">
        body = #{record.body,jdbcType=VARCHAR},
      </if>
      <if test="record.isprivate != null">
        isPrivate = #{record.isprivate,jdbcType=CHAR},
      </if>
      <if test="record.ip != null">
        ip = #{record.ip,jdbcType=VARCHAR},
      </if>
      <if test="record.datacreate != null">
        dataCreate = #{record.datacreate,jdbcType=TIMESTAMP},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update t_comment
    set id = #{record.id,jdbcType=INTEGER},
      commentType = #{record.commenttype,jdbcType=VARCHAR},
      parentID = #{record.parentid,jdbcType=INTEGER},
      commentObjectID = #{record.commentobjectid,jdbcType=INTEGER},
      ownerID = #{record.ownerid,jdbcType=INTEGER},
      userID = #{record.userid,jdbcType=INTEGER},
      author = #{record.author,jdbcType=VARCHAR},
      subject = #{record.subject,jdbcType=VARCHAR},
      body = #{record.body,jdbcType=VARCHAR},
      isPrivate = #{record.isprivate,jdbcType=CHAR},
      ip = #{record.ip,jdbcType=VARCHAR},
      dataCreate = #{record.datacreate,jdbcType=TIMESTAMP}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.linjun.model.Comment">
    update t_comment
    <set>
      <if test="commenttype != null">
        commentType = #{commenttype,jdbcType=VARCHAR},
      </if>
      <if test="parentid != null">
        parentID = #{parentid,jdbcType=INTEGER},
      </if>
      <if test="commentobjectid != null">
        commentObjectID = #{commentobjectid,jdbcType=INTEGER},
      </if>
      <if test="ownerid != null">
        ownerID = #{ownerid,jdbcType=INTEGER},
      </if>
      <if test="userid != null">
        userID = #{userid,jdbcType=INTEGER},
      </if>
      <if test="author != null">
        author = #{author,jdbcType=VARCHAR},
      </if>
      <if test="subject != null">
        subject = #{subject,jdbcType=VARCHAR},
      </if>
      <if test="body != null">
        body = #{body,jdbcType=VARCHAR},
      </if>
      <if test="isprivate != null">
        isPrivate = #{isprivate,jdbcType=CHAR},
      </if>
      <if test="ip != null">
        ip = #{ip,jdbcType=VARCHAR},
      </if>
      <if test="datacreate != null">
        dataCreate = #{datacreate,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.linjun.model.Comment">
    update t_comment
    set commentType = #{commenttype,jdbcType=VARCHAR},
      parentID = #{parentid,jdbcType=INTEGER},
      commentObjectID = #{commentobjectid,jdbcType=INTEGER},
      ownerID = #{ownerid,jdbcType=INTEGER},
      userID = #{userid,jdbcType=INTEGER},
      author = #{author,jdbcType=VARCHAR},
      subject = #{subject,jdbcType=VARCHAR},
      body = #{body,jdbcType=VARCHAR},
      isPrivate = #{isprivate,jdbcType=CHAR},
      ip = #{ip,jdbcType=VARCHAR},
      dataCreate = #{datacreate,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>